#!/bin/bash
# *********************************************************************
# *************           IBERIA L.A.E.                   *************
# *************       by Software Engineering             *************
# *********************************************************************
# installation commands for SSM Agent on Amazon Linux 2 (https://docs.aws.amazon.com/systems-manager/latest/userguide/agent-install-al2.html)
cd /tmp
sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_arm64/amazon-ssm-agent.rpm
sudo systemctl enable amazon-ssm-agent
sudo systemctl start amazon-ssm-agent
sudo systemctl status amazon-ssm-agent

curl "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

#sudo amazon-linux-extras install -y nginx1

#printf "server {listen 127.0.0.1:80;root /srv/www/${service_name};location / {try_files $uri $uri/ /index.html;}}" > /etc/nginx/conf.d/${service_name}.conf
# echo "Hello Angular!"
#sudo systemctl enable nginx
#sudo systemctl restart nginx

## configure file cloudwatch agent
# Note of developer: pending configure json file,this file is present in same repository
Install necessary dependencies
Installing the CloudWatch agent
sudo yum install amazon-cloudwatch-agent

# sudo DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade
# sudo apt-get -y -qq install curl wget git vim apt-transport-https ca-certificates
# # node js
# sudo apt-get install nodejs

# # java runtime11
sudo amazon-linux-extras install -y java-openjdk11

# # Setup your group and adding your user
# sudo groupadd -r ${department}
# sudo useradd -m -s /bin/bash ${name}
# sudo usermod -a -G ${department} ${name}

# # Setup sudo to allow no-password 
# sudo cp /etc/sudoers /etc/sudoers.orig
# echo "${name} ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/${name}

# Create PATH for your user EC2-user and star application
sudo -H -i -u ${name} -- env bash << EOF
# change directory project home

# export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain ${domain} --domain-owner ${owner} --query authorizationToken --output text`

cd /home/${name}

# export environment variables
export NODEROOT=/usr/lib/nodejs
export JAVAROOT=/usr/lib/java

# path software 
export NODEPATH=/home/${name}/www
export JARPATH=/opt/microservice/lib   # Note of developers : change to other path

# # setting environment path
export PATH=$PATH:$NODEROOT/bin:$JAVAROOT/bin:$NODEPATH/dist:$JARPATH

if [ ${lenguage} == "angular"] ; then
     # change directory
     cd $NODEPATH
     
elif [ ${lenguage} == "java"] ; then
    # run jar spring boot
    cd $JARPATH
    $JAVAROOT -jar $BINARY $PARAM
else 
    echo "Not complete process, lenguage code selected isn't implement to script"
if
EOF
