#### test composite 
name: 'build'
description: 'building artifact'
inputs:
  ## if use code artifact repository-host
  codeartifact-allow:
    type: string
    required: true
    default: false
  repository-host:
    type: string
    required: true
    # if use codeartifact then repository-user is owner account id
  repository-user:
    type: string
    required: true
  repository-token:
    type: string
    required: true
outputs:
      package-groupid-name: ${{ steps.package-generator-name.outputs.package-group }}
      package-artifactid-name: ${{ steps.package-generator-name.outputs.package-artifact }}
      package-version-name: ${{ steps.package-generator-name.outputs.package-version }} 
      package-type-name: ${{ steps.package-generator-name.outputs.package-type-id }}
runs:
  using: "composite"
  steps:
    # Step 1 
    - name: checkout
      uses: actions/checkout@v3
    # Step 3 
    - name: Build
      id: package-generator-name
      working-directory: scripts
      shell: bash
      run: echo "::set-output name=package-groupid-name::$(echo "junior")"
    # Step 4  
    - name: control
      id: control-version
      working-directory: scripts
      env:
          # get package name generate from step build
          VERSION:  ${{ steps.package-generator-name.outputs.package-version }}
      shell: bash    
      run: control-version.sh & echo "version $VERSION"
